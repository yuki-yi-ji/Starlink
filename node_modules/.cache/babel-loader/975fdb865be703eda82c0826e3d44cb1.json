{"ast":null,"code":"var _jsxFileName = \"/Users/yourfather/Desktop/starlink/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { NEARBY_SATELLITE, STARLINK_CATEGORY, SAT_API_KEY, SATELLITE_POSITION_URL } from '../constant';\nimport Axios from 'axios';\nimport WorldMap from './WorldMap';\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.trackOnClick = duration => {\n      const {\n        observerLat,\n        observerLong,\n        observerAlt\n      } = this.state.setting;\n      const endTime = duration * 60;\n      this.setState({\n        loadingSatPositions: true\n      });\n      const urls = this.state.selected.map(sat => {\n        const {\n          satid\n        } = sat;\n        const url = `${SATELLITE_POSITION_URL}/${satid}/${observerLat}/${observerLong}/${observerAlt}/${endTime}/&apiKey=${SAT_API_KEY}`;\n        return Axios.get(url);\n      });\n      Axios.all(urls).then(Axios.spread((...args) => {\n        return args.map(item => item.data);\n      })).then(res => {\n        this.setState({\n          satPositions: res,\n          loadingSatPositions: false\n        });\n      }).catch(e => {\n        console.log('err in fetch satellite position -> ', e.message);\n      });\n    };\n\n    this.addOrRemove = (item, status) => {\n      let {\n        selected: list\n      } = this.state; // let list = this.state.selected;\n\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if (status && !found) {\n        list.push(item);\n      }\n\n      if (!status && found) {\n        list = list.filter(entry => {\n          return entry.satid !== item.satid;\n        });\n      }\n\n      console.log(list);\n      this.setState({\n        selected: list\n      });\n    };\n\n    this.showNearbySatellite = setting => {\n      this.setState({\n        setting: setting\n      });\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        observerLat,\n        observerLong,\n        observerAlt,\n        radius\n      } = setting;\n      const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerAlt}/${radius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        loadingSatellites: true\n      });\n      Axios.get(url).then(response => {\n        this.setState({\n          satInfo: response.data,\n          loadingSatellites: false,\n          selected: []\n        });\n      }).catch(error => {\n        console.log('err in fetch satellite -> ', error);\n        this.setState({\n          loadingSatellites: false\n        });\n      });\n    };\n\n    this.state = {\n      loadingSatellites: false,\n      loadingSatPositions: false,\n      setting: undefined,\n      selected: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SatSetting, {\n      onShow: this.showNearbySatellite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(SatelliteList, {\n      satInfo: this.state.satInfo,\n      loading: this.state.loadingSatellites,\n      onSelectionChange: this.addOrRemove,\n      disableTrack: this.state.selected.length === 0,\n      trackOnclick: this.trackOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WorldMap, {\n      loading: this.state.loadingSatPositions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/yourfather/Desktop/starlink/src/components/Main.js"],"names":["React","Component","SatSetting","SatelliteList","NEARBY_SATELLITE","STARLINK_CATEGORY","SAT_API_KEY","SATELLITE_POSITION_URL","Axios","WorldMap","Main","constructor","trackOnClick","duration","observerLat","observerLong","observerAlt","state","setting","endTime","setState","loadingSatPositions","urls","selected","map","sat","satid","url","get","all","then","spread","args","item","data","res","satPositions","catch","e","console","log","message","addOrRemove","status","list","found","some","entry","push","filter","showNearbySatellite","fetchSatellite","radius","loadingSatellites","response","satInfo","error","undefined","render","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { NEARBY_SATELLITE, STARLINK_CATEGORY, SAT_API_KEY, SATELLITE_POSITION_URL } from '../constant';\nimport Axios from 'axios';\nimport WorldMap from './WorldMap';\n\nclass Main extends Component {\n    constructor(){\n      super();\n      this.state = {\n        loadingSatellites: false,\n        loadingSatPositions: false,\n        setting: undefined,\n        selected: [],\n      }\n    }\n\n    trackOnClick = (duration) => {\n      const { observerLat, observerLong, observerAlt } = this.state.setting;\n      const endTime = duration * 60;\n      this.setState({ loadingSatPositions: true });\n      const urls = this.state.selected.map( sat => {\n          const { satid } = sat;\n          const url = `${SATELLITE_POSITION_URL}/${satid}/${observerLat}/${observerLong}/${observerAlt}/${endTime}/&apiKey=${SAT_API_KEY}`;\n          return Axios.get(url);\n      });\n\n      Axios.all(urls)\n        .then(\n          Axios.spread((...args) => {\n              return args.map(item => item.data);\n          })\n        )\n        .then( res => {\n            this.setState({\n                satPositions: res,\n                loadingSatPositions: false,\n            });\n        })\n        .catch( e => {\n            console.log('err in fetch satellite position -> ', e.message);\n        })\n\n    }\n\n    addOrRemove = (item, status) => {\n      let { selected: list } = this.state;\n      // let list = this.state.selected;\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if(status && !found){\n          list.push(item)\n      }\n\n      if(!status && found){\n          list = list.filter( entry => {\n              return entry.satid !== item.satid;\n          });\n      }\n      \n      console.log(list);\n      this.setState({\n        selected: list\n      })\n    }\n\n    showNearbySatellite = (setting) => {\n      this.setState({\n        setting: setting,\n      })\n      this.fetchSatellite(setting);\n    }\n\n    fetchSatellite = (setting) => {\n      const {observerLat, observerLong, observerAlt, radius} = setting;\n      const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerAlt}/${radius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      \n      this.setState({\n        loadingSatellites: true,\n      })\n      Axios.get(url)\n          .then(response => {\n              this.setState({\n                  satInfo: response.data,\n                  loadingSatellites: false,\n                  selected: [],\n              })\n          })\n          .catch(error => {\n              console.log('err in fetch satellite -> ', error);\n              this.setState({\n                loadingSatellites: false,\n              })\n          })\n    }\n\n    render() {\n        return (\n          <div className='main'>\n            <div className=\"left-side\">\n              <SatSetting onShow={this.showNearbySatellite} />\n              <SatelliteList \n                satInfo={this.state.satInfo} \n                loading={this.state.loadingSatellites} \n                onSelectionChange={this.addOrRemove}\n                disableTrack={this.state.selected.length === 0}\n                trackOnclick={this.trackOnClick}\n              />\n            </div>\n            <div className=\"right-side\">\n              <WorldMap \n                loading={this.state.loadingSatPositions}\n              />\n            </div>\n          </div>\n        );\n    }\n}\nexport default Main;"]},"metadata":{},"sourceType":"module"}